<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>nl.rabobank.retail.insurance</groupId>
    <artifactId>baton</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>baton</name>
    <properties>
        <java.version>21</java.version>
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <pico-cli.version>4.7.5</pico-cli.version>
        <jfiglet.version>0.0.9</jfiglet.version>
        <jmustache.version>1.16</jmustache.version>
        <jgit.version>6.8.0.202311291450-r</jgit.version>
        <slf4j.version>2.0.9</slf4j.version>
        <curl.version>0.0.43</curl.version>
        <jackson.version>2.16.1</jackson.version>
        <graal-vm.version>23.1.1</graal-vm.version>
        <snakeyaml.version>2.2</snakeyaml.version>
        <junit.version>4.13.2</junit.version>
        <assertj.version>3.22.0</assertj.version>
        <gson.version>2.11.0</gson.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <maven-native-plugin.version>0.9.28</maven-native-plugin.version>
        <maven-exec-plugin.version>3.1.1</maven-exec-plugin.version>
        <maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>${pico-cli.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.lalyos</groupId>
            <artifactId>jfiglet</artifactId>
            <version>${jfiglet.version}</version>
        </dependency>
        <dependency>
            <groupId>com.samskivert</groupId>
            <artifactId>jmustache</artifactId>
            <version>${jmustache.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>${jgit.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-nop</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.toile-libre.libe</groupId>
            <artifactId>curl</artifactId>
            <version>${curl.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>${snakeyaml.version}</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>info.picocli</groupId>
                            <artifactId>picocli-codegen</artifactId>
                            <version>${pico-cli.version}</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>${maven-native-plugin.version}</version>
                <extensions>true</extensions>
                <dependencies>
                    <dependency>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>graalvm-reachability-metadata</artifactId>
                        <version>${maven-native-plugin.version}</version>
                        <classifier>repository</classifier>
                        <type>zip</type>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>build-native</id>
                        <goals>
                            <goal>compile-no-fork</goal>
                        </goals>
                        <phase>package</phase>
                    </execution>
                    <execution>
                        <id>test-native</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                    </execution>
                </executions>
                <configuration>
                    <metadataRepository>
                        <enabled>true</enabled>
                    </metadataRepository>
                    <imageName>${project.name}</imageName>
                    <mainClass>nl.onnoh.baton.Main</mainClass>
                    <buildArgs>
<!--                        <buildArg>-H:+PrintAnalysisCallTree</buildArg>-->
                        <buildArg>-H:+UnlockExperimentalVMOptions</buildArg>
                        <buildArg>-H:ResourceConfigurationFiles=target/classes/META-INF/native-image/${project.groupId}/${project.artifactId}/resource-config.json</buildArg>
                        <buildArg>-H:Log=registerResource:5</buildArg>
                        <buildArg>--enable-url-protocols=https</buildArg>
                    </buildArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${maven-exec-plugin.version}</version>
                <executions>
                    <execution>
                        <id>generateGraalResourceConfig</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeProjectDependencies>true</includeProjectDependencies>
                    <includePluginDependencies>true</includePluginDependencies>
                    <mainClass>picocli.codegen.aot.graalvm.ResourceConfigGenerator</mainClass>
                    <arguments>
                        <argument>--output=target/classes/META-INF/native-image/${project.groupId}/${project.artifactId}/resource-config.json</argument>
                        <argument>--pattern=templates/.*</argument>
                        <argument>--pattern=figlet-fonts/.*</argument>
                        <argument>--pattern=common/.*</argument>
                        <argument>--pattern=^application.yaml$</argument>
                    </arguments>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>info.picocli</groupId>
                        <artifactId>picocli-codegen</artifactId>
                        <version>4.7.5</version>
                        <type>jar</type>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <configuration>
                            <target>
                                <macrodef name="replaceproperty" taskname="@{taskname}">
                                    <attribute name="src" />
                                    <attribute name="dest" default="" />
                                    <attribute name="replace" default="" />
                                    <attribute name="with" default="" />
                                    <sequential>
                                        <loadresource property="@{dest}">
                                            <propertyresource name="@{src}" />
                                            <filterchain>
                                                <tokenfilter>
                                                    <filetokenizer/>
                                                    <replacestring from="@{replace}" to="@{with}"/>
                                                </tokenfilter>
                                            </filterchain>
                                        </loadresource>
                                    </sequential>
                                </macrodef>
                                <delete file="src/main/resources/common/resource-allocation-table" />
                                <defaultexcludes remove="**/.gitignore" />
                                <pathconvert property="resource.files" pathsep="${line.separator}">
                                    <fileset dir="src/main/resources" />
                                </pathconvert>
                                <replaceproperty src="resource.files" dest="stripped.resource.files" replace="${user.dir}/src/main/resources/" with=""/>
                                <echo file="src/main/resources/common/resource-allocation-table" message="${stripped.resource.files}" />
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>